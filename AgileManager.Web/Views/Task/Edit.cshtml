@model DomainClasses.Task

@{
    ViewBag.Title = "Edit task";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TaskType, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.TaskType, Model.TaskType.ToSelectList(), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TaskType)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StoryPoints, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.StoryPoints, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StoryPoints)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TaskStatus, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.TaskStatus, Model.TaskStatus.ToSelectList(), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TaskStatus)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TaskPriority, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.TaskPriority, Model.TaskPriority.ToSelectList(), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TaskPriority)
            </div>
        </div>   

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to task", "Details", new { id = Model.Id })
</div>
